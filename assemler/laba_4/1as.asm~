%include "lib.asm"
section .data
	 mas dw 1,-2,3,4,5
	    dw 5,6,7,8,9
	  count dd 4
section .bss
	;; mas dw 25
	inbuf resb 10
	lenIn equ $-inbuf

	outbuf resb 10
	lenout equ $-outbuf
	result resw 1
section .text
global _start
_start:
	
;; 	mov ecx, 10
;; 	mov esi, mas
;; cycler:	
;; 	mov eax, 3
;; 	mov ebx, 0
;; 	mov edi, inbuf
;; 	mov edx, 10
;; 	int 0x80

;; 	;; передаем параметры в функцию
;; 	mov esi, inbuf
;; 	call StrToInt
;; 	cmp EBX, 0
;; 	mov [esi], ax
;; 	add esi, 2
	
;; 	loop cycler
;; 	jmp calc
calc:	

	mov ebx, -1
	;; mov edi, 0 		;смещение первого элемента
	mov ecx, 2
cycle:	
	push ecx
	
	mov ecx,  [count]
	dec ecx
	;; mov ebx, 0 		;смещение по столбцам
	
.cycle1:
	inc ebx
	mov ax, [mas + ebx*2]
	cmp ax, 0
	jl .cycle1
	add dx, ax
	loop .cycle1

	
	pop ecx
	xor ebx, ebx
	mov ebx, 4
	loop cycle
	mov [result], dx 
	mov ax, [result]
		mov esi, outbuf
	cwde
	call IntToStr
	mov eax, 4
	mov ebx, 1
	mov ecx, outbuf
	mov edx, eax
	int 0x80


	mov eax, 1
	xor ebx, ebx
	int 0x80

	
